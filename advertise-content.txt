"use client"

import type React from "react"

import { useState } from "react"
import Image from "next/image"
import { Users, Target, BarChart2, CheckCircle2, ArrowRight, Mail, Phone, Globe } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { useToast } from "@/components/ui/use-toast"
import { motion } from "framer-motion"

export default function AdvertiseContent() {
  const { toast } = useToast()
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    company: "",
    website: "",
    message: "",
  })
  const [isSubmitting, setIsSubmitting] = useState(false)

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target
    setFormData((prev) => ({ ...prev, [name]: value }))
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setIsSubmitting(true)

    // Simulate form submission
    await new Promise((resolve) => setTimeout(resolve, 1500))

    toast({
      title: "Inquiry Submitted",
      description: "We&apos;ve received your advertising inquiry and will contact you soon.",
    })

    setIsSubmitting(false)
    setFormData({
      name: "",
      email: "",
      company: "",
      website: "",
      message: "",
    })
  }

  const stats = [
    {
      icon: <Users className="h-5 w-5 text-brand-500" />,
      title: "500K+",
      description: "Monthly Active Users",
    },
    {
      icon: <Target className="h-5 w-5 text-brand-500" />,
      title: "18-34",
      description: "Core Demographic Age",
    },
    {
      icon: <BarChart2 className="h-5 w-5 text-brand-500" />,
      title: "15M+",
      description: "Monthly Meme Views",
    },
  ]

  const adPackages = [
    {
      title: "Starter",
      price: "$299",
      description: "Perfect for small businesses and startups",
      features: ["Banner ad for 1 week", "Basic targeting options", "Performance analytics"],
      cta: "Get Started",
    },
    {
      title: "Professional",
      price: "$599",
      description: "Ideal for growing businesses",
      features: [
        "Banner ad for 2 weeks",
        "Advanced targeting options",
        "Detailed performance analytics",
        "Featured in mobile feed",
      ],
      cta: "Choose Pro",
      highlighted: true,
    },
    {
      title: "Enterprise",
      price: "$999",
      description: "For established brands and companies",
      features: [
        "Banner ad for 1 month",
        "Premium targeting options",
        "Comprehensive analytics dashboard",
        "Featured in mobile feed",
        "Custom ad placement",
      ],
      cta: "Contact Sales",
    },
  ]

  return (
    <div className="space-y-12">
      {/* Hero Section */}
      <section className="rounded-xl bg-gradient-to-r from-brand-50 to-neutral-50 p-6 dark:from-brand-950/40 dark:to-neutral-900 md:p-8">
        <div className="grid gap-8 md:grid-cols-2 md:gap-12">
          <div>
            <h2 className="mb-4 text-2xl font-bold md:text-3xl">Reach Our Engaged Audience</h2>
            <p className="mb-6 text-neutral-600 dark:text-neutral-300">
              Connect with millions of meme enthusiasts and showcase your brand or project on MemeSwipe, the premier
              platform for discovering and sharing the internet's best memes.
            </p>
            <div className="flex flex-wrap gap-4">
              {stats.map((stat, index) => (
                // eslint-disable-next-line react/no-unescaped-entities
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.3, delay: index * 0.1 }}
                  className="flex items-center gap-3 rounded-lg bg-white p-3 shadow-sm dark:bg-neutral-800"
                >
                  <div className="flex h-10 w-10 items-center justify-center rounded-full bg-brand-50 dark:bg-brand-950/40">
                    {stat.icon}
                  </div>
                  <div>
                    <p className="font-bold">{stat.title}</p>
                    <p className="text-xs text-neutral-500 dark:text-neutral-400">{stat.description}</p>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
          <div className="relative hidden overflow-hidden rounded-lg md:block">
            <Image
              src="/placeholder.svg?height=400&width=600&text=Advertise+on+MemeSwipe"
              alt="Advertise on MemeSwipe"
              width={600}
              height={400}
              className="h-full w-full object-cover"
            />
          </div>
        </div>
      </section>

      {/* Advertising Packages */}
      <section>
        <h2 className="mb-6 text-xl font-bold md:text-2xl">Advertising Packages</h2>
        <div className="grid gap-6 md:grid-cols-3">
          {adPackages.map((pkg, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.3, delay: index * 0.1 }}
            >
              <Card className={`h-full ${pkg.highlighted ? "border-brand-200 dark:border-brand-800" : ""}`}>
                <CardHeader className={pkg.highlighted ? "bg-brand-50 dark:bg-brand-950/40" : ""}>
                  <CardTitle>{pkg.title}</CardTitle>
                  <CardDescription>{pkg.description}</CardDescription>
                  <div className="mt-2 text-2xl font-bold">
                    {pkg.price}
                    <span className="text-sm font-normal text-neutral-500"> / package</span>
                  </div>
                </CardHeader>
                <CardContent className="pt-6">
                  <ul className="space-y-2">
                    {pkg.features.map((feature, i) => (
                      <li key={i} className="flex items-start gap-2">
                        <CheckCircle2 className="mt-0.5 h-4 w-4 text-green-500" />
                        <span className="text-sm">{feature}</span>
                      </li>
                    ))}
                  </ul>
                </CardContent>
                <CardFooter>
                  <Button
                    className={`w-full ${
                      pkg.highlighted
                        ? "bg-gradient-to-r from-brand-500 to-brand-600 hover:from-brand-600 hover:to-brand-700"
                        : ""
                    }`}
                    variant={pkg.highlighted ? "default" : "outline"}
                  >
                    {pkg.cta}
                  </Button>
                </CardFooter>
              </Card>
            </motion.div>
          ))}
        </div>
      </section>

      {/* Contact Form */}
      <section className="rounded-xl border p-6 md:p-8">
        <h2 className="mb-6 text-xl font-bold md:text-2xl">Get in Touch</h2>
        <div className="grid gap-8 md:grid-cols-2">
          <div>
            <p className="mb-4 text-neutral-600 dark:text-neutral-300">
              Interested in advertising on MemeSwipe? Fill out the form and our team will get back to you with more
              information about our advertising options.
            </p>

            <div className="space-y-4">
              <div className="flex items-center gap-3">
                <div className="flex h-10 w-10 items-center justify-center rounded-full bg-brand-50 dark:bg-brand-950/40">
                  <Mail className="h-5 w-5 text-brand-500" />
                </div>
                <div>
                  <p className="text-sm font-medium">Email Us</p>
                  <p className="text-sm text-neutral-500 dark:text-neutral-400">ads@memeswipe.example</p>
                </div>
              </div>

              <div className="flex items-center gap-3">
                <div className="flex h-10 w-10 items-center justify-center rounded-full bg-brand-50 dark:bg-brand-950/40">
                  <Phone className="h-5 w-5 text-brand-500" />
                </div>
                <div>
                  <p className="text-sm font-medium">Call Us</p>
                  <p className="text-sm text-neutral-500 dark:text-neutral-400">+1 (555) 123-4567</p>
                </div>
              </div>

              <div className="flex items-center gap-3">
                <div className="flex h-10 w-10 items-center justify-center rounded-full bg-brand-50 dark:bg-brand-950/40">
                  <Globe className="h-5 w-5 text-brand-500" />
                </div>
                <div>
                  <p className="text-sm font-medium">Visit Our Website</p>
                  <p className="text-sm text-neutral-500 dark:text-neutral-400">www.memeswipe.example</p>
                </div>
              </div>
            </div>
          </div>

          <form onSubmit={handleSubmit} className="space-y-4">
            <div className="grid gap-4 md:grid-cols-2">
              <div>
                <label htmlFor="name" className="mb-1 block text-sm font-medium">
                  Name
                </label>
                <Input id="name" name="name" value={formData.name} onChange={handleChange} required />
              </div>
              <div>
                <label htmlFor="email" className="mb-1 block text-sm font-medium">
                  Email Address
                </label>
                <Input id="email" name="email" type="email" value={formData.email} onChange={handleChange} required />
              </div>
            </div>
            <div className="grid gap-4 md:grid-cols-2">
              <div>
                <label htmlFor="company" className="mb-1 block text-sm font-medium">
                  Company Name (Optional)
                </label>
                <Input id="company" name="company" value={formData.company} onChange={handleChange} />
              </div>
              <div>
                <label htmlFor="website" className="mb-1 block text-sm font-medium">
                  Website URL (Optional)
                </label>
                <Input id="website" name="website" type="url" value={formData.website} onChange={handleChange} />
              </div>
            </div>
            <div>
              <label htmlFor="message" className="mb-1 block text-sm font-medium">
                Message
              </label>
              <Textarea
                id="message"
                name="message"
                rows={4}
                value={formData.message}
                onChange={handleChange}
                required
                placeholder="Tell us about your advertising needs..."
              />
            </div>
            <Button type="submit" disabled={isSubmitting}>
              {isSubmitting ? "Submitting..." : "Send Inquiry"}
              {!isSubmitting && <ArrowRight className="ml-2 h-4 w-4" />}
            </Button>
          </form>
        </div>
      </section>
    </div>
  )
} 